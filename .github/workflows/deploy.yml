name: Deploy to ECS

on:
  push:
    branches: [main]

env:
  AWS_REGION: ap-northeast-1
  ECR_REPOSITORY: hackz-backend
  ECS_SERVICE: hackz-app
  ECS_CLUSTER: hackz-cluster
  ECS_TASK_DEFINITION: hackz-app
  CONTAINER_NAME: app

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build --platform linux/amd64 -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Download task definition
      run: |
        aws ecs describe-task-definition --task-definition $ECS_TASK_DEFINITION --query taskDefinition > task-definition.json

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ steps.build-image.outputs.image }}

    - name: Update environment variables in task definition
      run: |
        jq '.containerDefinitions[0].environment = [
          {"name": "PORT", "value": "80"},
          {"name": "MYSQL_HOST", "value": "${{ secrets.MYSQL_HOST }}"},
          {"name": "MYSQL_DATABASE", "value": "${{ secrets.MYSQL_DATABASE }}"},
          {"name": "MYSQL_PORT", "value": "3306"},
          {"name": "MYSQL_USER", "value": "${{ secrets.MYSQL_USER }}"},
          {"name": "MYSQL_PASSWORD", "value": "${{ secrets.MYSQL_PASSWORD }}"},
          {"name": "GEMINI_API_KEY", "value": "${{ secrets.GEMINI_API_KEY }}"}
        ]' task-definition.json > task-definition-updated.json
        mv task-definition-updated.json task-definition.json

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v2
      with:
        task-definition: task-definition.json
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true
